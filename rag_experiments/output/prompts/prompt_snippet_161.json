[
  {
    "role": "assistant",
    "content": "You are an expert Python programmer who can correctly implement complete Python classes based on the provided class skeleton."
  },
  {
    "role": "user",
    "content": "For your understanding, following are some (skeleton, code) examples:\n\nExample skeleton:\n\n\nclass SAPSuccessFactorsGlobalConfiguration(ConfigurationModel):\n    '''\n    The global configuration for integrating with SuccessFactors.\n    .. no_pii:\n    '''\n\n    class Meta:\n\n    def __str__(self):\n        '''\n        Return a human-readable string representation of the object.\n        '''\n        pass\n\n    def __repr__(self):\n        '''\n        Return uniquely identifying string representation.\n        '''\n        pass\nCorresponding class implementation:\n\nfrom config_models.models import ConfigurationModel\nfrom django.db import models\n\nclass SAPSuccessFactorsGlobalConfiguration(ConfigurationModel):\n    \"\"\"\n    The global configuration for integrating with SuccessFactors.\n\n    .. no_pii:\n    \"\"\"\n    completion_status_api_path = models.CharField(max_length=255)\n    course_api_path = models.CharField(max_length=255)\n    oauth_api_path = models.CharField(max_length=255)\n    search_student_api_path = models.CharField(max_length=255)\n    provider_id = models.CharField(max_length=100, default='EDX')\n\n    class Meta:\n        app_label = 'sap_success_factors'\n\n    def __str__(self):\n        \"\"\"\n        Return a human-readable string representation of the object.\n        \"\"\"\n        return '<SAPSuccessFactorsGlobalConfiguration with id {id}>'.format(id=self.id)\n\n    def __repr__(self):\n        \"\"\"\n        Return uniquely identifying string representation.\n        \"\"\"\n        return self.__str__()\n\nExample skeleton:\n\n\nclass BaseTestCase(TestCase):\n\n    def setUp(self):\n        '''\n        Creates test users.\n        '''\n        pass\nCorresponding class implementation:\n\nfrom rest_framework.test import APIRequestFactory, APITestCase as TestCase\n\nclass BaseTestCase(TestCase):\n\n    def setUp(self):\n        \"\"\"\n        Creates test users.\n        \"\"\"\n        self.username = 'john.doe'\n        self.email = 'john.doe@example.com'\n        self.password = 'hunter2'\n        self.user = User.objects.create_user(self.username, self.email, self.password)\n        self.username2 = 'jane.doe'\n        self.email2 = 'jane.doe@example.com'\n        self.password2 = 'hunter2'\n        self.user2 = User.objects.create_user(self.username2, self.email2, self.password2)\n\nNow, implement the following class. Do not explain the code. The given class skeleton is as follows:\nclass BaziManager:\n    '''\n    八字命理管理器。\n    '''\n\n    def __init__(self):\n        '''\n        初始化八字管理器.\n        '''\n        pass\n\n    def init_tools(self, add_tool, PropertyList, Property, PropertyType):\n        '''\n        初始化并注册所有八字命理工具。\n        '''\n        pass"
  }
]