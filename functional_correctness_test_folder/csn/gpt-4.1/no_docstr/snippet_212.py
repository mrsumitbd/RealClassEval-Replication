
from datetime import date, timedelta
from typing import Dict, Union
try:
    from lunardate import LunarDate
except ImportError:
    class LunarDate:
        pass  # Dummy class if lunardate is not installed


class ThreeNineUtils:

    @staticmethod
    def get_39days(year: int) -> Dict[str, date]:
        """
        Returns a dict mapping '一九', '二九', ..., '九九' to their start dates for the given year.
        The "三九天" (Three-Nine Days) starts from the winter solstice (Dongzhi) of the given year.
        Each "九" is 9 days, total 9 periods.
        """
        # Dongzhi (Winter Solstice) calculation for the given year
        # For simplicity, use an approximate algorithm for Dongzhi (Dec 21-23)
        # Dongzhi is usually Dec 21, 22, or 23 in the Gregorian calendar
        # We'll use an astronomical approximation for the northern hemisphere
        # For most years, Dongzhi falls on Dec 21 or 22
        # Here, we use a table for 1900-2099
        # Source: https://baike.baidu.com/item/%E5%86%AC%E8%87%B3/11097
        dongzhi_table = {
            1900: 22, 1901: 22, 1902: 22, 1903: 22, 1904: 22, 1905: 22, 1906: 22, 1907: 22, 1908: 22, 1909: 22,
            1910: 22, 1911: 22, 1912: 22, 1913: 22, 1914: 22, 1915: 22, 1916: 22, 1917: 22, 1918: 22, 1919: 22,
            1920: 22, 1921: 22, 1922: 22, 1923: 22, 1924: 22, 1925: 22, 1926: 22, 1927: 22, 1928: 22, 1929: 22,
            1930: 22, 1931: 22, 1932: 22, 1933: 22, 1934: 22, 1935: 22, 1936: 22, 1937: 22, 1938: 22, 1939: 22,
            1940: 22, 1941: 22, 1942: 22, 1943: 22, 1944: 22, 1945: 22, 1946: 22, 1947: 22, 1948: 22, 1949: 22,
            1950: 22, 1951: 22, 1952: 22, 1953: 22, 1954: 22, 1955: 22, 1956: 22, 1957: 22, 1958: 22, 1959: 22,
            1960: 21, 1961: 22, 1962: 22, 1963: 22, 1964: 21, 1965: 22, 1966: 22, 1967: 22, 1968: 21, 1969: 22,
            1970: 22, 1971: 22, 1972: 21, 1973: 22, 1974: 22, 1975: 22, 1976: 21, 1977: 22, 1978: 22, 1979: 22,
            1980: 21, 1981: 22, 1982: 22, 1983: 22, 1984: 21, 1985: 22, 1986: 22, 1987: 22, 1988: 21, 1989: 22,
            1990: 22, 1991: 22, 1992: 21, 1993: 22, 1994: 22, 1995: 22, 1996: 21, 1997: 22, 1998: 22, 1999: 22,
            2000: 21, 2001: 22, 2002: 22, 2003: 22, 2004: 21, 2005: 22, 2006: 22, 2007: 22, 2008: 21, 2009: 22,
            2010: 22, 2011: 22, 2012: 21, 2013: 22, 2014: 22, 2015: 22, 2016: 21, 2017: 22, 2018: 22, 2019: 22,
            2020: 21, 2021: 21, 2022: 22, 2023: 22, 2024: 21, 2025: 21, 2026: 22, 2027: 22, 2028: 21, 2029: 21,
            2030: 22, 2031: 22, 2032: 21, 2033: 21, 2034: 22, 2035: 22, 2036: 21, 2037: 21, 2038: 22, 2039: 22,
            2040: 21, 2041: 21, 2042: 22, 2043: 22, 2044: 21, 2045: 21, 2046: 22, 2047: 22, 2048: 21, 2049: 21,
            2050: 22, 2051: 22, 2052: 21, 2053: 21, 2054: 22, 2055: 22, 2056: 21, 2057: 21, 2058: 22, 2059: 22,
            2060: 21, 2061: 21, 2062: 22, 2063: 22, 2064: 21, 2065: 21, 2066: 22, 2067: 22, 2068: 21, 2069: 21,
            2070: 22, 2071: 22, 2072: 21, 2073: 21, 2074: 22, 2075: 22, 2076: 21, 2077: 21, 2078: 22, 2079: 22,
            2080: 21, 2081: 21, 2082: 22, 2083: 22, 2084: 21, 2085: 21, 2086: 22, 2087: 22, 2088: 21, 2089: 21,
            2090: 22, 2091: 22, 2092: 21, 2093: 21, 2094: 22, 2095: 22, 2096: 21, 2097: 21, 2098: 22, 2099: 22,
        }
        # Default to Dec 21 if year not in table
        dongzhi_day = dongzhi_table.get(year, 21)
        dongzhi = date(year, 12, dongzhi_day)
        labels = ['一九', '二九', '三九', '四九', '五九', '六九', '七九', '八九', '九九']
        result = {}
        for i, label in enumerate(labels):
            result[label] = dongzhi + timedelta(days=i*9)
        return result

    @staticmethod
    def get_39label(date_obj: Union[date, 'LunarDate']) -> str:
        """
        Returns the "三九天" label for the given date, or '' if not in any "九".
        """
        # If LunarDate, convert to Gregorian date
        if 'LunarDate' in globals() and isinstance(date_obj, LunarDate):
            try:
                dt = date_obj.toSolarDate()
            except Exception:
                return ''
        elif isinstance(date_obj, date):
            dt = date_obj
        else:
            return ''
        # Find the winter solstice of the year
        year = dt.year
        # If date is before Dongzhi, use previous year's Dongzhi
        dongzhi_table = {
            1900: 22, 1901: 22, 1902: 22, 1903: 22, 1904: 22, 1905: 22, 1906: 22, 1907: 22, 1908: 22, 1909: 22,
            1910: 22, 1911: 22, 1912: 22, 1913: 22, 1914: 22, 1915: 22, 1916: 22, 1917: 22, 1918: 22, 1919: 22,
            1920: 22, 1921: 22, 1922: 22, 1923: 22, 1924: 22, 1925: 22, 1926: 22, 1927: 22, 1928: 22, 1929: 22,
            1930: 22, 1931: 22, 1932: 22, 1933: 22, 1934: 22, 1935: 22, 1936: 22, 1937: 22, 1938: 22, 1939: 22,
            1940: 22, 1941: 22, 1942: 22, 1943: 22, 1944: 22, 1945: 22, 1946: 22, 1947: 22, 1948: 22, 1949: 22,
            1950: 22, 1951: 22, 1952: 22, 1953: 22, 1954: 22, 1955: 22, 1956: 22, 1957: 22, 1958: 22, 1959: 22,
            1960: 21, 1961: 22, 1962: 22, 1963: 22, 1964: 21, 1965: 22, 1966: 22, 1967: 22, 1968: 21, 1969: 22,
            1970: 22, 1971: 22, 1972: 21, 1973: 22, 1974: 22, 1975: 22, 1976: 21, 1977: 22, 1978: 22, 1979: 22,
            1980: 21, 1981: 22, 1982: 22, 1983: 22, 1984: 21, 1985: 22, 1986: 22, 1987: 22, 1988: 21, 1989: 22,
            1990: 22, 1991: 22, 1992: 21, 1993: 22, 1994: 22, 1995: 22, 1996: 21, 1997: 22, 1998: 22, 1999: 22,
            2000: 21, 2001: 22, 2002: 22, 2003: 22, 2004: 21, 2005: 22, 2006: 22, 2007: 22, 2008: 21, 2009: 22,
            2010: 22, 2011: 22, 2012: 21, 2013: 22, 2014: 22, 2015: 22, 2016: 21, 2017: 22, 2018: 22, 2019: 22,
            2020: 21, 2021: 21, 2022: 22, 2023: 22, 2024: 21, 2025: 21, 2026: 22, 2027: 22, 2028: 21, 2029: 21,
            2030: 22, 2031: 22, 2032: 21, 2033: 21, 2034: 22, 2035: 22, 2036: 21, 2037: 21, 2038: 22, 2039: 22,
            2040: 21, 2041: 21, 2042: 22, 2043: 22, 2044: 21, 2045: 21, 2046: 22, 2047: 22, 2048: 21, 2049: 21,
            2050: 22, 2051: 22, 2052: 21, 2053: 21, 2054: 22, 2055: 22, 2056: 21, 2057: 21, 2058: 22, 2059: 22,
            2060: 21, 2061: 21, 2062: 22, 2063: 22, 2064: 21, 2065: 21, 2066: 22, 2067: 22, 2068: 21, 2069: 21,
            2070: 22, 2071: 22, 2072: 21, 2073: 21, 2074: 22, 2075: 22, 2076: 21, 2077: 21, 2078: 22, 2079: 22,
            2080: 21, 2081: 21, 2082: 22, 2083: 22, 2084: 21, 2085: 21, 2086: 22, 2087: 22, 2088: 21, 2089: 21,
            2090: 22, 2091: 22, 2092: 21, 2093: 21, 2094: 22, 2095: 22, 2096: 21, 2097: 21, 2098: 22, 2099: 22,
        }
        dongzhi_day = dongzhi_table.get(year, 21)
        dongzhi = date(year, 12, dongzhi_day)
        if dt < dongzhi:
            # Use previous year's Dongzhi
            prev_year = year - 1
            dongzhi_day = dongzhi_table.get(prev_year, 21)
            dongzhi = date(prev_year, 12, dongzhi_day)
        # Now, check which "九" the date falls in
        delta = (dt - dongzhi).days
        if 0 <= delta < 81:
            labels = ['一九', '二九', '三九', '四九', '五九', '六九', '七九', '八九', '九九']
            idx = delta // 9
            return labels[idx]
        else:
            return ''
