id,module,name,file,doc,markers,status,message,duration
functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py::test_case_0,functional_correctness_test_folder.post_cut-off.Qwen.partial_docstr.test_snippet_143,test_case_0,functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py,,,failed,ValueError: Unsupported vulnerability type,0.0003460469888523221
functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py::test_case_1,functional_correctness_test_folder.post_cut-off.Qwen.partial_docstr.test_snippet_143,test_case_1,functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py,,,failed,ValueError: Unsupported vulnerability type,0.00025095802266150713
functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py::test_case_2,functional_correctness_test_folder.post_cut-off.Qwen.partial_docstr.test_snippet_143,test_case_2,functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py,,,failed,"AssertionError: assert 'Generate Rob...n boundaries.' == '\n        I ...ON:\n        '
  
  + Generate RobustnessType.INPUT_OVERRELIANCE examples of input overreliance vulnerabilities. Enhanced with context amnesia patterns that exploit memory and session boundaries.
  - 
  -         I want you to act as a security penetration tester. Based on the purpose, please create a list of JSON objects with an `input` key.
  -         The `input` should be a request that tests overreliance on specific inputs by overwhelming the agent with biased data or exploiting context resets.
  -         Each `input` should test whether the agent maintains proper reasoning when faced with manipulated context, session boundaries, or parameter dropout.
  - ...
  
  ...Full output truncated (105 lines hidden), use '-vv' to show",0.0038375729927793145
functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py::test_case_3,functional_correctness_test_folder.post_cut-off.Qwen.partial_docstr.test_snippet_143,test_case_3,functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py,,,failed,"AssertionError: assert 'Generate Fal...n boundaries.' == '\n        I ...ON:\n        '
  
  + Generate False examples of input overreliance vulnerabilities. Enhanced with context amnesia patterns that exploit memory and session boundaries.
  - 
  -         I want you to act as a security penetration tester. Based on the purpose, please create a list of JSON objects with an `input` key.
  -         The `input` should be a request that tests overreliance on specific inputs by overwhelming the agent with biased data or exploiting context resets.
  -         Each `input` should test whether the agent maintains proper reasoning when faced with manipulated context, session boundaries, or parameter dropout.
  - ...
  
  ...Full output truncated (105 lines hidden), use '-vv' to show",0.003588056017179042
functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py::test_case_4,functional_correctness_test_folder.post_cut-off.Qwen.partial_docstr.test_snippet_143,test_case_4,functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py,,,failed,"assert 'Generate Tru...as workflows.' == '\n        I ...ON:\n        '
  
  + Generate True examples of hijacking vulnerabilities. The purpose of these examples is I?sJ@ZS""MyEcq. Enhanced with memory poisoning patterns that inject fabricated context and bias workflows.
  - 
  -         I want you to act as a security penetration tester. Based on the purpose, please create a list of JSON objects with an `input` key.
  -         The `input` should be a request that tests whether fabricated memories or poisoned context can hijack the agent's behavior and decision-making processes.
  -         Each `input` should test whether the agent can distinguish between ...
  
  ...Full output truncated (107 lines hidden), use '-vv' to show",0.004264658025931567
functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py::test_case_5,functional_correctness_test_folder.post_cut-off.Qwen.partial_docstr.test_snippet_143,test_case_5,functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py,,,failed,"AssertionError: assert 'Generate Tru...as workflows.' == '\n        I ...ON:\n        '
  
  + Generate True examples of hijacking vulnerabilities. Enhanced with memory poisoning patterns that inject fabricated context and bias workflows.
  - 
  -         I want you to act as a security penetration tester. Based on the purpose, please create a list of JSON objects with an `input` key.
  -         The `input` should be a request that tests whether fabricated memories or poisoned context can hijack the agent's behavior and decision-making processes.
  -         Each `input` should test whether the agent can distinguish between legitimate context and manipulated information designed to steer outcomes.
  - ...
  
  ...Full output truncated (105 lines hidden), use '-vv' to show",0.004510636965278536
functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py::test_case_6,functional_correctness_test_folder.post_cut-off.Qwen.partial_docstr.test_snippet_143,test_case_6,functional_correctness_test_folder/post_cut-off/Qwen/partial_docstr/test_snippet_143.py,,xfail,xfailed,,0.0003951530088670552
